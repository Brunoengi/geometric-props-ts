import { type IBidimensionalPoint, type IGeometricProps } from './interfaces/IGeometricProps.js';
declare class GeometricProps implements IGeometricProps {
    private _A;
    private _Sx;
    private _Sy;
    private _Ix;
    private _Iy;
    private _Ixy;
    private _Ixg;
    private _Iyg;
    private _Ixyg;
    private _Y1;
    private _Y2;
    private _W1;
    private _W2;
    private _Xmax;
    private _Ymax;
    private _Xmin;
    private _Ymin;
    private _Xg;
    private _Yg;
    private _height;
    private _base;
    constructor(vector: IBidimensionalPoint[]);
    private calculateArea;
    private calculateSx;
    private calculateSy;
    private calculateIx;
    private calculateIy;
    private calculateIxy;
    private calculateXg;
    private calculateYg;
    private calculateIxg;
    private calculateIyg;
    private calculateIxyg;
    private calculateY1;
    private calculateY2;
    private calculateW1;
    private calculateW2;
    private calculateHeight;
    private calculateBase;
    private calculateXMax;
    private calculateXMin;
    private calculateYMax;
    private calculateYMin;
    private sumSignCorrection;
    get A(): number;
    get Sx(): number;
    get Sy(): number;
    get Ix(): number;
    get Iy(): number;
    get Ixy(): number;
    get Xmax(): number;
    get Xmin(): number;
    get Ymax(): number;
    get Ymin(): number;
    get Xg(): number;
    get Yg(): number;
    get Ixg(): number;
    get Iyg(): number;
    get Ixyg(): number;
    get Y1(): number;
    get Y2(): number;
    get W1(): number;
    get W2(): number;
    get height(): number;
    get base(): number;
}
export default GeometricProps;
